version: '3.7'

volumes:
    prometheus_data: {}

networks:
  monitor-net:
    driver: overlay
    name: inbound
  traefik:
    driver: overlay
    name: traefik

services:
  traefik:
    image: traefik:v1.7.12-alpine
    command:
      - "--logLevel=DEBUG"
      - "--api"
      - "--metrics"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--docker"
      - "--docker.swarmMode"
      - "--docker.domain=docker.localhost"
      - "--docker.watch"
    networks:
      - traefik
      - monitor-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: ingress
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus-config/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - monitor-net     
    deploy:
      labels:
          - "traefik.frontend.rule=Host:prometheus.localhost"
          - "traefik.backend=prometheus"
          - "traefik.port=9090"
          - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure  

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    env_file:
      - ./grafana-config/config.monitoring
    volumes:
      - ./grafana-config/provisioning/:/etc/grafana/provisioning/
    networks:
      - monitor-net
    user: "104"
    deploy:
      labels:
        -  "traefik.frontend.rule=Host:grafana.localhost"
        - "traefik.backend=grafana"
        - "traefik.port=3000"
        - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure

  mikrotik-exporter:
    image: devinsmith/mikrotik-stats:latest
    volumes:
      - ./exporter-config/:/etc/config/
    networks:
      - monitor-net
    environment:
      - CONFIG_FILE=/etc/config/config.yml
    user: "104"
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
        -  "traefik.frontend.rule=Host:exporter.localhost"
        - "traefik.backend=exporter"
        - "traefik.port=9436"
        - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure



#        


